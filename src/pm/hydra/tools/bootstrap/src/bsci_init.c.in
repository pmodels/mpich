/* -*- Mode: C; c-basic-offset:4 ; -*- */
/*
 *  (C) 2009 by Argonne National Laboratory.
 *      See COPYRIGHT in top-level directory.
 */

#include "hydra.h"
#include "bsci.h"
#include "bscu.h"

struct HYDT_bsci_fns HYDT_bsci_fns = { 0 };
struct HYDT_bsci_info HYDT_bsci_info = { 0 };

/* *INDENT-OFF* */
static const char *launcher_names[] = { @hydra_launcher_names@ };
static HYD_status(*launcher_init_fns[])(void) = { @hydra_launcher_init_fns@ };
/* *INDENT-ON* */

int HYDT_bsci_query_avail(const char *launcher)
{
    int i;

    for (i = 0; launcher_names[i]; i++)
        if (!strcmp(launcher, launcher_names[i]))
            return 1;

    return 0;
}

HYD_status HYDT_bsci_init(const char *launcher,
                          const char *launcher_exec, int enablex, int debug)
{
    int i;
    HYD_status status = HYD_SUCCESS;

    HYDU_FUNC_ENTER();

    HYDT_bsci_info.launcher = launcher;
    HYDT_bsci_info.launcher_exec = launcher_exec;
    HYDT_bsci_info.debug = debug;
    HYDT_bsci_info.enablex = enablex;

    /* Make sure the launcher we found is valid */
    for (i = 0; launcher_names[i]; i++) {
        if (!strcmp(launcher, launcher_names[i])) {
            status = (*launcher_init_fns[i]) ();
            HYDU_ERR_POP(status, "launcher init returned error\n");
            break;
        }
    }

    /* This function is mandatory */
    if (HYDT_bsci_fns.launch_procs == NULL)
        HYDU_ERR_SETANDJUMP(status, HYD_INTERNAL_ERROR, "mandatory launch function undefined\n");

  fn_exit:
    HYDU_FUNC_EXIT();
    return status;

  fn_fail:
    goto fn_exit;
}
